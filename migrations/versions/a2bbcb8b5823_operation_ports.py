# -*- coding: utf-8 -*-}
"""oeration_ports

Revision ID: a2bbcb8b5823
Revises: fcbcbd8ded43
Create Date: 2017-05-02 18:39:53.436342

"""
from alembic import op
from sqlalchemy import String, Integer
from sqlalchemy.sql import table, column, text

# revision identifiers, used by Alembic.
revision = 'a2bbcb8b5823'
down_revision = 'fcbcbd8ded43'
branch_labels = None
depends_on = None


def upgrade():
    try:
        op.execute(text('START TRANSACTION'))
        insert_operation_operation_port()
        insert_operation_port_interface()
        insert_operation_port_interface_operation_port()
        insert_operation_port_interface_translation()
        insert_operation_port_translation()
    except:
        op.execute(text('ROLLBACK'))
        raise


def insert_operation_operation_port():
    tb = table(
        'operation_port',
        column('id', Integer),
        column('type', String),
        column('tags', String),
        column('operation_id', Integer),
        column('order', Integer),
        column('multiplicity', String), )

    columns = ('id', 'type', 'tags', 'operation_id',
               'order', 'multiplicity')
    data = [
        (1, 'INPUT', None, 5, 1, 'ONE'),
        (2, 'OUTPUT', None, 5, 1, 'MANY'),
        (3, 'INPUT', None, 6, 1, 'ONE'),
        (4, 'OUTPUT', None, 6, 1, 'MANY'),
        (5, 'INPUT', None, 12, 1, 'ONE'),
        (6, 'INPUT', None, 12, 1, 'ONE'),
        (7, 'OUTPUT', None, 12, 1, 'MANY'),
        (8, 'INPUT', None, 13, 1, 'ONE'),
        (9, 'INPUT', None, 13, 1, 'ONE'),
        (10, 'OUTPUT', None, 13, 1, 'MANY'),
        (11, 'INPUT', None, 16, 1, 'ONE'),
        (12, 'INPUT', None, 16, 1, 'ONE'),
        (13, 'OUTPUT', None, 16, 1, 'MANY'),
        (14, 'OUTPUT', None, 8, 1, 'MANY'),
        (16, 'INPUT', None, 2, 2, 'ONE'),
        (18, 'INPUT', None, 1, 2, 'ONE'),
        (19, 'INPUT', None, 1, 1, 'ONE'),
        (20, 'OUTPUT', None, 1, 2, 'MANY'),
        (21, 'OUTPUT', None, 4, 1, 'MANY'),
        (22, 'INPUT', None, 10, 2, 'ONE'),
        (23, 'INPUT', None, 10, 1, 'ONE'),
        (24, 'OUTPUT', None, 10, 2, 'MANY'),
        (25, 'OUTPUT', None, 10, 1, 'MANY'),
        (26, 'INPUT', None, 17, 1, 'ONE'),
        (27, 'OUTPUT', None, 17, 1, 'MANY'),
        (28, 'OUTPUT', None, 17, 2, 'MANY'),
        (29, 'INPUT', None, 7, 1, 'ONE'),
        (30, 'OUTPUT', None, 7, 1, 'MANY'),
        (31, 'INPUT', None, 15, 1, 'ONE'),
        (32, 'OUTPUT', None, 15, 1, 'MANY'),
        (34, 'OUTPUT', None, 9, 1, 'MANY'),
        (35, 'OUTPUT', None, 18, 1, 'MANY'),
        (36, 'INPUT', None, 19, 1, 'ONE'),
        (37, 'INPUT', None, 19, 3, 'ONE'),
        (38, 'OUTPUT', None, 14, 1, 'MANY'),
        (39, 'OUTPUT', None, 19, 1, 'MANY'),
        (40, 'INPUT', None, 20, 1, 'ONE'),
        (43, 'OUTPUT', None, 21, 1, 'MANY'),
        (44, 'INPUT', None, 21, 1, 'ONE'),
        (45, 'INPUT', None, 22, 1, 'ONE'),
        (46, 'OUTPUT', None, 22, 1, 'MANY'),
        (47, 'INPUT', None, 22, 1, 'ONE'),
        (48, 'OUTPUT', None, 23, 1, 'MANY'),
        (49, 'INPUT', None, 23, 1, 'ONE'),
        (50, 'INPUT', None, 24, 1, 'ONE'),
        (51, 'INPUT', None, 24, 1, 'ONE'),
        (52, 'OUTPUT', None, 24, 1, 'MANY'),
        (55, 'INPUT', None, 28, 1, 'ONE'),
        (56, 'OUTPUT', None, 28, 1, 'MANY'),
        (57, 'OUTPUT', None, 29, 1, 'ONE'),
        (58, 'INPUT', None, 30, 1, 'ONE'),
        (60, 'OUTPUT', None, 31, 1, 'MANY'),
        (61, 'INPUT', None, 32, 1, 'ONE'),
        (62, 'OUTPUT', None, 32, 1, 'MANY'),
        (63, 'INPUT', None, 27, 1, 'ONE'),
        (64, 'OUTPUT', None, 27, 1, 'MANY'),
        (65, 'OUTPUT', None, 33, 1, 'MANY'),
        (66, 'INPUT', None, 33, 1, 'ONE'),
        (68, 'INPUT', None, 34, 1, 'ONE'),
        (70, 'OUTPUT', None, 35, 1, 'MANY'),
        (73, 'INPUT', None, 26, 2, 'MANY'),
        (74, 'OUTPUT', None, 36, 1, 'MANY'),
        (75, 'INPUT', None, 36, 1, 'ONE'),
        (76, 'OUTPUT', None, 37, 1, 'MANY'),
        (77, 'INPUT', None, 37, 1, 'ONE'),
        (79, 'OUTPUT', None, 38, 1, 'MANY'),
        (80, 'INPUT', None, 38, 1, 'ONE'),
        (83, 'INPUT', None, 39, 1, 'ONE'),
        (85, 'INPUT', None, 40, 1, 'ONE'),
        (86, 'OUTPUT', None, 40, 1, 'MANY'),
        (87, 'INPUT', None, 41, 1, 'ONE'),
        (88, 'OUTPUT', None, 41, 1, 'MANY'),
        (89, 'OUTPUT', None, 40, 2, 'MANY'),
        (91, 'OUTPUT', None, 3, 1, 'MANY'),
        (92, 'INPUT', None, 42, 1, 'ONE'),
        (93, 'INPUT', None, 42, 2, 'ONE'),
        (94, 'OUTPUT', None, 42, 1, 'MANY'),
        (95, 'INPUT', None, 43, 2, 'ONE'),
        (96, 'INPUT', None, 43, 1, 'ONE'),
        (97, 'OUTPUT', None, 43, 1, 'MANY'),
        (98, 'OUTPUT', None, 43, 2, 'MANY'),
        (100, 'OUTPUT', None, 43, 3, 'MANY'),
        (101, 'OUTPUT', None, 44, 1, 'MANY'),
        (102, 'OUTPUT', None, 45, 1, 'MANY'),
        (103, 'OUTPUT', None, 46, 1, 'MANY'),
        (104, 'OUTPUT', None, 47, 1, 'MANY'),
        (105, 'OUTPUT', None, 19, 2, 'MANY'),
        (106, 'INPUT', None, 43, 3, 'ONE'),
        (107, 'OUTPUT', None, 48, 1, 'MANY'),
        (108, 'INPUT', None, 49, 1, 'ONE'),
        (109, 'OUTPUT', None, 49, 1, 'MANY'),
        (110, 'INPUT', None, 50, 1, 'ONE'),
        (111, 'OUTPUT', None, 50, 1, 'MANY'),
        (112, 'INPUT', None, 51, 1, 'ONE'),
        (113, 'OUTPUT', None, 51, 1, 'MANY'),
        (114, 'INPUT', None, 50, 2, 'ONE'),
        (115, 'INPUT', None, 52, 1, 'ONE'),
        (116, 'OUTPUT', None, 52, 2, 'MANY'),
        (117, 'OUTPUT', None, 52, 1, 'MANY'),
        (118, 'OUTPUT', None, 53, 1, 'MANY'),
        (119, 'INPUT', None, 54, 1, 'MANY'),
        (120, 'INPUT', None, 2, 1, 'ONE'),
        (121, 'INPUT', None, 2, 2, 'ONE'),
        (122, 'OUTPUT', None, 2, 1, 'ONE'),
        (123, 'INPUT', None, 55, 1, 'ONE'),
        (124, 'INPUT', None, 55, 2, 'ONE'),
        (125, 'OUTPUT', None, 55, 1, 'MANY'),
        (126, 'INPUT', None, 57, 1, 'ONE'),
        (127, 'INPUT', None, 57, 2, 'ONE'),
        (128, 'OUTPUT', None, 57, 1, 'MANY'),
        (129, 'OUTPUT', None, 58, 1, 'MANY'),
        (130, 'INPUT', None, 37, 2, 'ONE'),
        (131, 'INPUT', None, 59, 1, 'ONE'),
        (132, 'INPUT', None, 59, 2, 'ONE'),
        (133, 'OUTPUT', None, 60, 1, 'MANY'),
        (134, 'OUTPUT', None, 59, 2, 'MANY'),
        (135, 'OUTPUT', None, 61, 1, 'MANY'),
        (136, 'INPUT', None, 62, 1, 'ONE'),
        (137, 'OUTPUT', None, 62, 1, 'MANY'),
        (138, 'INPUT', None, 63, 1, 'ONE'),
        (139, 'OUTPUT', None, 63, 1, 'MANY'),
        (140, 'INPUT', None, 64, 1, 'ONE'),
        (141, 'OUTPUT', None, 64, 1, 'MANY'),
        (142, 'INPUT', None, 65, 1, 'ONE'),
        (143, 'OUTPUT', None, 65, 1, 'MANY'),
        (144, 'INPUT', None, 66, 1, 'ONE'),
        (145, 'OUTPUT', None, 66, 1, 'MANY'),
        (146, 'INPUT', None, 67, 1, 'ONE'),
        (147, 'OUTPUT', None, 67, 1, 'MANY'),
        (148, 'OUTPUT', None, 68, 1, 'MANY'),
        (149, 'OUTPUT', None, 69, 1, 'MANY'),
        (150, 'OUTPUT', None, 70, 1, 'MANY'),
        (151, 'OUTPUT', None, 71, 1, 'MANY'),
        (152, 'OUTPUT', None, 59, 1, 'MANY'),
        (153, 'INPUT', None, 72, 1, 'ONE'),
        (154, 'OUTPUT', None, 72, 1, 'MANY'),
        (155, 'INPUT', None, 35, 1, 'ONE'),
        (156, 'INPUT', None, 68, 1, 'ONE'),
        (157, 'INPUT', None, 69, 1, 'ONE'),
        (158, 'INPUT', None, 70, 1, 'ONE'),
        (159, 'INPUT', None, 71, 1, 'ONE'),
        (160, 'INPUT', None, 73, 1, 'ONE'),
        (161, 'INPUT', None, 73, 2, 'ONE'),
        (162, 'OUTPUT', None, 73, 1, 'MANY'),
        (163, 'OUTPUT', None, 73, 2, 'MANY'),
        (164, 'OUTPUT', None, 74, 1, 'MANY'),
        (165, 'INPUT', None, 75, 1, 'ONE'),
        (166, 'OUTPUT', None, 75, 1, 'MANY'),
        (167, 'INPUT', None, 72, 2, 'ONE'),
        (168, 'OUTPUT', None, 76, 1, 'MANY'),
        (169, 'OUTPUT', None, 77, 1, 'MANY'),
        (170, 'OUTPUT', None, 78, 1, 'MANY'),
        (171, 'OUTPUT', None, 79, 1, 'MANY'),
        (172, 'INPUT', None, 80, 1, 'ONE'),
        (173, 'OUTPUT', None, 80, 1, 'MANY'),
        (174, 'INPUT', None, 81, 1, 'ONE'),
        (175, 'OUTPUT', None, 81, 1, 'MANY'),
        (176, 'INPUT', None, 3, 1, 'ONE')
    ]
    rows = [dict(list(zip(columns, row))) for row in data]

    op.bulk_insert(tb, rows)


def insert_operation_port_interface():
    tb = table(
        'operation_port_interface',
        column('id', Integer),
        column('color', String), )

    columns = ('id', 'color')
    data = [
        (1, '#111'),
        (2, '#111'),
        (3, '#111'),
        (4, '#FFDC00'),
        (5, '#2ECC40'),
        (6, '#B10DC9'),
        (7, '#001f3f'),
        (8, '#222'),
        (9, '#FF851B'),
        (10, '#FF4136'),
        (11, '#85144b'),
        (12, '#FF88FF'),
        (13, 'violet'),
        (14, 'orange'),
        (15, 'darkgray'),
        (16, 'cyan'),
        (17, 'pink'),
        (18, 'purple')
    ]
    rows = [dict(list(zip(columns, row))) for row in data]

    op.bulk_insert(tb, rows)


def insert_operation_port_interface_operation_port():
    tb = table(
        'operation_port_interface_operation_port',
        column('operation_port_id', Integer),
        column('operation_port_interface_id', Integer), )

    columns = ('operation_port_id', 'operation_port_interface_id')
    data = [
        (1, 1),
        (2, 1),
        (3, 1),
        (4, 1),
        (5, 1),
        (6, 1),
        (7, 1),
        (8, 1),
        (9, 1),
        (10, 1),
        (11, 1),
        (12, 1),
        (13, 1),
        (14, 1),
        (16, 1),
        (19, 1),
        (23, 1),
        (25, 1),
        (26, 1),
        (27, 1),
        (28, 1),
        (29, 1),
        (30, 1),
        (31, 1),
        (32, 1),
        (35, 1),
        (36, 1),
        (38, 1),
        (44, 1),
        (45, 1),
        (48, 1),
        (49, 1),
        (50, 1),
        (51, 1),
        (52, 1),
        (65, 1),
        (66, 1),
        (68, 1),
        (70, 1),
        (74, 1),
        (75, 1),
        (76, 1),
        (77, 1),
        (79, 1),
        (80, 1),
        (83, 5),
        (85, 1),
        (86, 1),
        (87, 1),
        (88, 1),
        (89, 4),
        (18, 5),
        (20, 2),
        (91, 1),
        (92, 1),
        (93, 6),
        (94, 1),
        (95, 1),
        (96, 5),
        (97, 1),
        (83, 8),
        (101, 5),
        (39, 9),
        (102, 5),
        (103, 5),
        (104, 5),
        (106, 10),
        (21, 5),
        (105, 10),
        (43, 1),
        (107, 11),
        (22, 11),
        (108, 1),
        (109, 1),
        (110, 1),
        (111, 1),
        (112, 1),
        (113, 1),
        (114, 1),
        (115, 1),
        (116, 1),
        (117, 13),
        (118, 1),
        (119, 9),
        (98, 9),
        (120, 13),
        (121, 14),
        (24, 14),
        (122, 1),
        (123, 1),
        (124, 1),
        (125, 1),
        (126, 1),
        (127, 1),
        (128, 1),
        (129, 1),
        (40, 1),
        (61, 1),
        (62, 1),
        (30, 1),
        (58, 1),
        (130, 1),
        (131, 1),
        (132, 16),
        (133, 16),
        (134, 15),
        (135, 1),
        (136, 1),
        (137, 1),
        (138, 1),
        (139, 1),
        (140, 1),
        (141, 1),
        (142, 1),
        (143, 1),
        (144, 1),
        (145, 1),
        (146, 1),
        (147, 1),
        (148, 1),
        (149, 1),
        (150, 1),
        (151, 1),
        (152, 1),
        (153, 1),
        (154, 1),
        (155, 1),
        (156, 1),
        (157, 1),
        (158, 1),
        (159, 1),
        (160, 1),
        (160, 6),
        (162, 1),
        (163, 18),
        (164, 17),
        (165, 1),
        (166, 1),
        (167, 4),
        (168, 17),
        (169, 17),
        (170, 17),
        (171, 17),
        (60, 5),
        (172, 1),
        (173, 1),
        (174, 1),
        (175, 1),
        (176, 1)
    ]
    rows = [dict(list(zip(columns, row))) for row in data]

    op.bulk_insert(tb, rows)


def insert_operation_port_interface_translation():
    tb = table(
        'operation_port_interface_translation',
        column('id', Integer),
        column('locale', String),
        column('name', String), )

    columns = ('id', 'locale', 'name')
    data = [
        (1, 'en', 'Data'),
        (1, 'pt', 'Data'),
        (2, 'en', 'ClassificationModel'),
        (2, 'pt', 'ClassificationModel'),
        (3, 'en', 'Label'),
        (3, 'pt', 'Label'),
        (4, 'en', 'IndexerModel'),
        (4, 'pt', 'IndexerModel'),
        (5, 'en', 'ClassificationAlgorithm'),
        (5, 'pt', 'ClassificationAlgorithm'),
        (6, 'en', 'MachineLearningModel'),
        (6, 'pt', 'MachineLearningModel'),
        (7, 'en', 'IFold'),
        (7, 'pt', 'IFold'),
        (8, 'en', 'IListOfClassificationModels'),
        (8, 'pt', 'IListOfClassificationModels'),
        (9, 'en', 'IEvaluation'),
        (9, 'pt', 'IEvaluation'),
        (10, 'en', 'IEvaluatorModel'),
        (10, 'pt', 'IEvaluatorModel'),
        (11, 'en', 'IClusteringAlgorithm'),
        (11, 'pt', 'IClusteringAlgorithm'),
        (12, 'en', 'IReport'),
        (12, 'pt', 'IReport'),
        (13, 'en', 'IVocabulary'),
        (13, 'pt', 'IVocabulary'),
        (14, 'en', 'IClusteringModel'),
        (14, 'pt', 'IClusteringModel'),
        (15, 'en', 'IRecommendationModel'),
        (15, 'pt', 'IRecommendationModel'),
        (16, 'en', 'IRecommendationAlgorithm'),
        (16, 'pt', 'IRecommendationAlgorithm'),
        (17, 'en', 'IRegressionAlgorithm'),
        (17, 'pt', 'IRegressionAlgorithm'),
        (18, 'en', 'IRegressionModel'),
        (18, 'pt', 'IRegressionModel')
    ]
    rows = [dict(list(zip(columns, row))) for row in data]

    op.bulk_insert(tb, rows)


def insert_operation_port_translation():
    tb = table(
        'operation_port_translation',
        column('id', Integer),
        column('locale', String),
        column('name', String),
        column('description', String), )

    columns = ('id', 'locale', 'name', 'description')
    data = [
        (1, 'en', 'input data', 'Input data to be filtered'),
        (1, 'pt', 'dados de entrada', 'Input data to be filtered'),
        (2, 'en', 'output data', 'Output data generated'),
        (2, 'pt', 'dados de saída', 'Output data generated'),
        (3, 'en', 'input data', 'Input data to be projected'),
        (3, 'pt', 'dados de entrada', 'Input data to be projected'),
        (4, 'en', 'output projected data', 'Output data'),
        (4, 'pt', 'dados de saída projetados', 'Dados de saída'),
        (5, 'en', 'input data 1', 'Input data 1'),
        (5, 'pt', 'dados de entrada 1', 'Input data 1'),
        (6, 'en', 'input data 2', 'Input data 2'),
        (6, 'pt', 'dados de entrada 2', 'Input data 2'),
        (7, 'en', 'output data', 'Output data'),
        (7, 'pt', 'dados de saída', 'Dados de saída'),
        (8, 'en', 'input data 1', 'Input data 1'),
        (8, 'pt', 'dados de entrada 1', 'Input data 1'),
        (9, 'en', 'input data 2', 'Input data 2'),
        (9, 'pt', 'dados de entrada 2', 'Input data 2'),
        (10, 'en', 'output data', 'Output data'),
        (10, 'pt', 'dados de saída', 'Dados de saída'),
        (11, 'en', 'input data 1', 'Input data 1'),
        (11, 'pt', 'dados de entrada 1', 'Input data 1'),
        (12, 'en', 'input data 2', 'Input data 2'),
        (12, 'pt', 'dados de entrada 2', 'Input data 2'),
        (13, 'en', 'output data', 'Output data'),
        (13, 'pt', 'dados de saída', 'Dados de saída'),
        (14, 'en', 'algorithm', 'Algorithm'),
        (14, 'pt', 'algoritmo', 'Algoritmo'),
        (16, 'en', 'input data', 'Input data'),
        (16, 'pt', 'dados de entrada', 'Dados de entrada'),
        (18, 'en', 'algorithm', 'Classification algorithm to be trained'),
        (18, 'pt', 'algoritmo', 'Classification algorithm to be trained'),
        (19, 'en', 'train input data', 'Train input data'),
        (19, 'pt', 'entrada do treino', 'Train input data'),
        (20, 'en', 'model', 'Output model'),
        (20, 'pt', 'modelo', 'Output model'),
        (21, 'en', 'algorithm', 'Algorithm to classify data'),
        (21, 'pt', 'algoritmo', 'Algorithm to classify data'),
        (22, 'en', 'algorithm', 'Clustering algorithm to be trained'),
        (22, 'pt', 'algoritmo', 'Clustering algorithm to be trained'),
        (23, 'en', 'train input data', 'Train input data'),
        (23, 'pt', 'entrada do treino', 'Train input data'),
        (24, 'en', 'model', 'Clustering output model'),
        (24, 'pt', 'modelo', 'Clustering output model'),
        (25, 'en', 'output data', 'Clustered data'),
        (25, 'pt', 'dados de saída', 'Clustered data'),
        (26, 'en', 'input data', 'Input data to be splitted'),
        (26, 'pt', 'dados de entrada', 'Input data to be splitted'),
        (27, 'en', 'splitted data 1', 'Output data 1'),
        (27, 'pt', 'parte 1 dos dados', 'Dados de saída 1'),
        (28, 'en', 'splitted data 2', 'Output data 2'),
        (28, 'pt', 'parte 2 dos dados', 'Dados de saída 2'),
        (29, 'en', 'input data', 'Input data to be transformed'),
        (29, 'pt', 'dados de entrada', 'Input data to be transformed'),
        (30, 'en', 'output data', 'Tranformed output data'),
        (30, 'pt', 'dados de saída', 'Tranformed output data'),
        (31, 'en', 'input data', 'Input data to be aggregated'),
        (31, 'pt', 'dados de entrada', 'Input data to be aggregated'),
        (32, 'en', 'output data', 'Aggregated output data'),
        (32, 'pt', 'dados de saída', 'Aggregated output data'),
        (34, 'en', 'algorithm', 'Untrained classification model'),
        (34, 'pt', 'algoritmo', 'Untrained classification model'),
        (35, 'en', 'output data', 'Read data'),
        (35, 'pt', 'dados de saída', 'Read data'),
        (36, 'en', 'input data', 'Input data to be used during evaluation'),
        (36, 'pt', 'dados de entrada',
         'Input data to be used during evaluation'),
        (37, 'en', 'model', 'Model to be evaluated'),
        (37, 'pt', 'modelo', 'Model to be evaluated'),
        (38, 'en', 'output data', 'Aggregated output data'),
        (38, 'pt', 'dados de saída', 'Aggregated output data'),
        (39, 'en', 'metric', 'Metric used for evaluation'),
        (39, 'pt', 'métric', 'Métrica usada para a avaliação'),
        (40, 'en', 'input data', 'Input data'),
        (40, 'pt', 'dados de entrada', 'Dados de entrada'),
        (43, 'en', 'output result', 'Output result'),
        (43, 'pt', 'resultado de saída', 'Saída de resultado'),
        (44, 'en', 'input data', 'Input data'),
        (44, 'pt', 'dados de entrada', 'Dados de entrada'),
        (45, 'en', 'input data', 'Input data'),
        (45, 'pt', 'dados de entrada', 'Dados de entrada'),
        (46, 'en', 'output result', 'Output result'),
        (46, 'pt', 'resultado de saída', 'Saída de resultado'),
        (47, 'en', 'model', 'model'),
        (47, 'pt', 'modelo', 'model'),
        (48, 'en', 'output data', 'Output data'),
        (48, 'pt', 'dados de saída', 'Dados de saída'),
        (49, 'en', 'input data', 'model'),
        (49, 'pt', 'dados de entrada', 'model'),
        (50, 'en', 'input data 1', 'Input data 1'),
        (50, 'pt', 'dados de entrada 1', 'Input data 1'),
        (51, 'en', 'input data 2', 'Input data 2'),
        (51, 'pt', 'dados de entrada 2', 'Input data 2'),
        (52, 'en', 'output data', 'Output data'),
        (52, 'pt', 'dados de saída', 'Dados de saída'),
        (55, 'en', 'input data', 'Input data to be sampled'),
        (55, 'pt', 'dados de entrada', 'Input data to be sampled'),
        (56, 'en', 'sampled data', 'Sampled data'),
        (56, 'pt', 'dados amostrados', 'Dados amostrados'),
        (57, 'en', 'algorithm', 'Untrained clustering model'),
        (57, 'pt', 'algoritmo', 'Untrained clustering model'),
        (58, 'en', 'input data', 'Write data'),
        (58, 'pt', 'dados de entrada', 'Escreve dados'),
        (60, 'en', 'algorithm', 'Algorithm'),
        (60, 'pt', 'algoritmo', 'Algoritmo'),
        (61, 'en', 'input data', 'Input to be sorted'),
        (61, 'pt', 'dados de entrada', 'Input to be sorted'),
        (62, 'en', 'output data', 'Sorted output'),
        (62, 'pt', 'dados de saída', 'Sorted output'),
        (63, 'en', 'input data', 'Input data'),
        (63, 'pt', 'dados de entrada', 'Dados de entrada'),
        (64, 'en', 'output data', 'Output data'),
        (64, 'pt', 'dados de saída', 'Dados de saída'),
        (65, 'en', 'output data', 'Output data'),
        (65, 'pt', 'dados de saída', 'Dados de saída'),
        (66, 'en', 'input data', 'Input data'),
        (66, 'pt', 'dados de entrada', 'Dados de entrada'),
        (68, 'en', 'input data', 'Input data'),
        (68, 'pt', 'dados de entrada', 'Dados de entrada'),
        (70, 'en', 'visualization', 'Visualization'),
        (70, 'pt', 'visualização', 'Visualização'),
        (73, 'en', 'visualizations', 'Visualization model'),
        (73, 'pt', 'visualizações', 'Modelo de visualização'),
        (74, 'en', 'output data', 'Output data'),
        (74, 'pt', 'dados de saída', 'Dados de saída'),
        (75, 'en', 'input data', 'Input data'),
        (75, 'pt', 'dados de entrada', 'Dados de entrada'),
        (76, 'en', 'output data', 'Output data'),
        (76, 'pt', 'dados de saída', 'Dados de saída'),
        (77, 'en', 'input data 1', 'Input data 1'),
        (77, 'pt', 'dados de entrada 1', 'Dados de entrada 1'),
        (79, 'en', 'output data', 'Output data'),
        (79, 'pt', 'dados de saída', 'Dados de saída'),
        (80, 'en', 'input data', 'Input data'),
        (80, 'pt', 'dados de entrada', 'Dados de entrada'),
        (83, 'en', 'models', 'Models to be saved'),
        (83, 'pt', 'modelos', 'Modelos a serem salvos'),
        (85, 'en', 'input data', 'Data set with feature columns to be indexed'),
        (85, 'pt', 'dados de entrada',
         'Conjunto de dados com atributos a serem indexados'),
        (86, 'en', 'output data', 'Output data with new indexed column'),
        (86, 'pt', 'dados de saída', 'Dados de saída com nova coluna indexada'),
        (87, 'en', 'input data', 'Input data'),
        (87, 'pt', 'dados de entrada', 'Dados de entrada'),
        (88, 'en', 'output data', 'Output data'),
        (88, 'pt', 'dados de saída', 'Dados de saída'),
        (89, 'en', 'indexer models', 'Indexer model generated'),
        (89, 'pt', 'modelos do indexador', 'Modelo de indexação gerado'),
        (91, 'en', 'output data', 'Output data'),
        (91, 'pt', 'dados saída', 'Dados de saída'),
        (92, 'en', 'input data', 'Input data'),
        (92, 'pt', 'dados de entrada', 'Dados de entrada'),
        (93, 'en', 'model', 'Input model to be applied'),
        (93, 'pt', 'modelo', 'Aplica esse modelo aos dados'),
        (94, 'en', 'output data', 'Output data'),
        (94, 'pt', 'dados de saída', 'Dados de saída'),
        (95, 'en', 'input data', 'Partitioned data in folds'),
        (95, 'pt', 'partição', 'Dados particionados'),
        (96, 'en', 'algorithm', 'Model'),
        (96, 'pt', 'algoritmo', 'Modelo'),
        (97, 'en', 'scored data', 'Scored data'),
        (97, 'pt', 'dados pontuados', 'Dados pontuados'),
        (98, 'en', 'evaluation', 'Evaluation'),
        (98, 'pt', 'avaliacao', 'Avaliação'),
        (100, 'en', 'models',
         'Models generate for each fold, sorted by best scored'),
        (100, 'pt', 'modelos',
         'Modelos gerados para cada partição, ordenados pelo melhor score'),
        (101, 'en', 'algorithm', 'Algorithm'),
        (101, 'pt', 'algoritmo', 'Algoritmo'),
        (102, 'en', 'algorithm', 'GBT classifier'),
        (102, 'pt', 'algoritmo', 'Classificador GBT'),
        (103, 'en', 'algorithm', 'Algorithm'),
        (103, 'pt', 'algoritmo', 'Algoritmo'),
        (104, 'en', 'algorithm', 'Algorithm'),
        (104, 'pt', 'algoritmo', 'Algoritmo'),
        (105, 'en', 'evaluator', 'Evaluator for ML model'),
        (105, 'pt', 'avaliador',
         'Avaliador para modelo de aprendizado de máquina'),
        (106, 'en', 'evaluator', 'Evaluator'),
        (106, 'pt', 'avaliador', 'Avaliador'),
        (107, 'en', 'algorithm', 'Algorithm'),
        (107, 'pt', 'algoritmo', 'Algoritmo'),
        (108, 'en', 'input data',
         'Input data with a text attribute to be tokenized'),
        (108, 'pt', 'dados de entrada',
         'Dados de entrada com um atributo texto a ser separado em palavras'),
        (109, 'en', 'output data',
         'Output data with tokenized text in a vector'),
        (109, 'pt', 'dados de saída',
         'Dados de saída com o texto dividido em palavras'),
        (110, 'en', 'input data', 'Input data with text to remove stop words'),
        (110, 'pt', 'dados de entrada',
         'Dados de entrada com o texto para se remover stop words'),
        (111, 'en', 'output data',
         'Output data with text field without stop words'),
        (111, 'pt', 'dados de saída',
         'Dados de saída com campo texto sem stop words'),
        (112, 'en', 'input data', 'Input data'),
        (112, 'pt', 'dados de entrada', 'Output data'),
        (113, 'en', 'output data', 'Output data'),
        (113, 'pt', 'dados de saída', 'Dados de saída'),
        (114, 'en', 'stop words',
         'Input data containing an attribute with stop words'),
        (114, 'pt', 'stop words',
         'Dados de entrada contendo um atributo com as stop words'),
        (115, 'en', 'input data', 'Input data'),
        (115, 'pt', 'dados de entrada', 'Dados de entrada'),
        (116, 'en', 'output data', 'Output data'),
        (116, 'pt', 'dados de saída', 'Dados de saída'),
        (117, 'en', 'vocabulary', 'Vocabulary produced'),
        (117, 'pt', 'vocabulário', 'Vocabulário gerado'),
        (118, 'en', 'geodata', 'Geospatial data'),
        (118, 'pt', 'dados geo', 'Dados geospaciais'),
        (119, 'en', 'evaluation', 'Evaluation'),
        (119, 'pt', 'avaliação', 'Avaliação'),
        (120, 'en', 'vocabulary', 'Vocabulary'),
        (120, 'pt', 'vocabulário', 'Vocabulário'),
        (121, 'en', 'model', 'Modelo'),
        (121, 'pt', 'modelo', 'Modelo'),
        (122, 'en', 'output data', 'Output data'),
        (122, 'pt', 'dados de saída', 'Dados de saída'),
        (123, 'en', 'input data', 'Input data'),
        (123, 'pt', 'dados de entrada', 'Dados de entrada'),
        (124, 'en', 'geo data', 'Geo data'),
        (124, 'pt', 'dados geo', 'Dados geo'),
        (125, 'en', 'output data', 'Output data'),
        (125, 'pt', 'dados de saída', 'Dados de saída'),
        (126, 'en', 'input data 1', 'Input data 1'),
        (126, 'pt', 'dados de entrada 1', 'Dados de entrada 1'),
        (127, 'en', 'input data 2', 'Input data 2'),
        (127, 'pt', 'dados de entrada 2', 'Dados de entrada 2'),
        (128, 'en', 'output data', 'Output data'),
        (128, 'pt', 'dados de saída', 'Dados de saída'),
        (129, 'en', 'output data', 'Output data'),
        (129, 'pt', 'dados de saída', 'Dados de saída'),
        (130, 'en', 'input data 2', 'Input data 2'),
        (130, 'pt', 'dados entrada 2', 'Dados de entrada 2'),
        (131, 'en', 'input data', 'Input data'),
        (131, 'pt', 'dados de entrada', 'Dados de entrada'),
        (132, 'en', 'algorithm', 'Algorithm'),
        (132, 'pt', 'algoritmo', 'Algoritmo'),
        (133, 'en', 'algorithm', 'Algorithm'),
        (133, 'pt', 'algoritmo', 'Algoritmo'),
        (134, 'en', 'model', 'Model'),
        (134, 'pt', 'modelo', 'Modelo'),
        (135, 'en', 'output data', 'Output data'),
        (135, 'pt', 'dados de saíra', 'Dados de saída'),
        (136, 'en', 'input data', 'Input data'),
        (136, 'pt', 'dados de entrada', 'Dados de entrada'),
        (137, 'en', 'output data', 'Output data'),
        (137, 'pt', 'dados de saída', 'Dados de saída'),
        (138, 'en', 'input data', 'Input data'),
        (138, 'pt', 'dados de entrada', 'Dados de entrada'),
        (139, 'en', 'output data', 'Output data'),
        (139, 'pt', 'dados de saída', 'Dados de saída'),
        (140, 'en', 'input data', 'Input data'),
        (140, 'pt', 'dados de entrada', 'Dados de entrada'),
        (141, 'en', 'output data', 'Output data'),
        (141, 'pt', 'dados de saída', 'Dados de saída'),
        (142, 'en', 'input data', 'Input data'),
        (142, 'pt', 'dados de entrada', 'Dados de entrada'),
        (143, 'en', 'output data', 'Output data'),
        (143, 'pt', 'dados de saída', 'Dados de saída'),
        (144, 'en', 'input data', 'Input data'),
        (144, 'pt', 'dados de entrada', 'Dados de entrada'),
        (145, 'en', 'output data', 'Output data'),
        (145, 'pt', 'dados de saída', 'Dados de saída'),
        (146, 'en', 'input data', 'Input data'),
        (146, 'pt', 'dados de entrada', 'Dados de entrada'),
        (147, 'en', 'output data', 'Output data'),
        (147, 'pt', 'dados de saída', 'Dados de saída'),
        (148, 'en', 'visualization', 'Visualization'),
        (148, 'pt', 'visualização', 'Visualização'),
        (149, 'en', 'visualization', 'Visualization'),
        (149, 'pt', 'visualização', 'Visualização'),
        (150, 'en', 'visualization', 'Visualization'),
        (150, 'pt', 'visualização', 'Visualização'),
        (151, 'en', 'visualization', 'Visualization'),
        (151, 'pt', 'visualização', 'Visualização'),
        (152, 'en', 'output data', 'Output data'),
        (152, 'pt', 'dados de saída', 'Dados de saída'),
        (153, 'en', 'input data', 'Input data'),
        (153, 'pt', 'dados de entrada', 'Dados de entrada'),
        (154, 'en', 'output data', 'Output data'),
        (154, 'pt', 'dados de saída', 'Dados de saída'),
        (155, 'en', 'input data', 'Input data'),
        (155, 'pt', 'dados de entrada', 'Dados de entrada'),
        (156, 'en', 'input data', 'Input data'),
        (156, 'pt', 'dados de entrada', 'Dados de entrada'),
        (157, 'en', 'input data', 'Input data'),
        (157, 'pt', 'dados de entrada', 'Dados de entrada'),
        (158, 'en', 'input data', 'Input data'),
        (158, 'pt', 'dados de entrada', 'Dados de entrada'),
        (159, 'en', 'input data', 'Input data'),
        (159, 'pt', 'dados de entrada', 'Dados de entrada'),
        (160, 'en', 'train input data', 'Train input data'),
        (160, 'pt', 'dados de treino de entrada', 'Dados de treino de entrada'),
        (161, 'en', 'algorithm', 'Algorithm'),
        (161, 'pt', 'algoritmo', 'Algoritmo'),
        (162, 'en', 'output data', 'Output data'),
        (162, 'pt', 'dados de saída', 'Dados de saída'),
        (163, 'en', 'model', 'Model'),
        (163, 'pt', 'modelo', 'Modelo'),
        (164, 'en', 'algorithm', 'Algorithm'),
        (164, 'pt', 'algoritmo', 'Algoritmo'),
        (165, 'en', 'input data', 'Input data'),
        (165, 'pt', 'dados de entrada', 'Dados de entrada'),
        (166, 'en', 'output data', 'Output data'),
        (166, 'pt', 'dados de saída', 'Dados de saída'),
        (167, 'en', 'indexer models', 'Indexer model'),
        (167, 'pt', 'modelos do indexador', 'Modelo do indexador'),
        (168, 'en', 'algorithm', 'algorithm'),
        (168, 'pt', 'algoritmo', 'algoritmo'),
        (169, 'en', 'algorithm', 'Algorithm'),
        (169, 'pt', 'algoritmo', 'Algoritmo'),
        (170, 'en', 'algorithm', 'Algorithm'),
        (170, 'pt', 'algoritmo', 'Algoritmo'),
        (171, 'en', 'algorithm', 'Algorithm'),
        (171, 'pt', 'algoritmo', 'Algoritmo'),
        (172, 'en', 'input data', 'Input data'),
        (172, 'pt', 'dados de entrada', 'Dados de entrada'),
        (173, 'en', 'visualization', 'Visualization'),
        (173, 'pt', 'visualização', 'Visualização'),
        (174, 'en', 'input data', 'Input data'),
        (174, 'pt', 'dados de entrada', 'Dados de entrada'),
        (175, 'en', 'visualization', 'Visualization'),
        (175, 'pt', 'visualização', 'Visualização'),
        (176, 'en', 'input data', 'Input data'),
        (176, 'pt', 'dados de entrada', 'Dados de entrada')
    ]
    rows = [dict(list(zip(columns, row))) for row in data]

    op.bulk_insert(tb, rows)


def downgrade():
    try:
        op.execute(text('START TRANSACTION'))
        op.execute(text('DELETE FROM operation_port_translation '
                        'WHERE id BETWEEN 1 AND 176'))
        op.execute(text('DELETE FROM operation_port_interface_translation '
                        'WHERE id BETWEEN 1 AND 18'))
        op.execute(text('DELETE FROM operation_port_interface_operation_port '
                        'WHERE operation_port_id BETWEEN 1 AND 176'))
        op.execute(text(
            'DELETE FROM operation_port WHERE id BETWEEN 1 AND 176'))
        op.execute(text(
            'DELETE FROM operation_port_interface WHERE id BETWEEN 1 AND 18'))
    except:
        op.execute(text('ROLLBACK'))
        raise
